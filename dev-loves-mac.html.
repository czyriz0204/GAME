<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Dev Loves Mac!</title>
  <style>
    body {
      font-family: 'Comic Sans MS', cursive;
      background: pink;
      text-align: center;
      padding: 20px;
    }
    h1 {
      color: red;
    }
    #score {
      font-size: 24px;
      color: darkred;
      margin: 10px;
    }
    #grid {
      display: grid;
      grid-template-columns: repeat(8, 50px);
      grid-template-rows: repeat(8, 50px);
      gap: 2px;
      margin: 20px auto;
      width: 420px;
    }
    .tile {
      width: 50px;
      height: 50px;
      border-radius: 10px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>ðŸ’– Dev Loves Mac Lenar Bringuela ðŸ’–</h1>
  <div id="score">Score: 0</div>
  <div id="grid"></div>

  <script>
    const grid = document.getElementById('grid');
    const scoreDisplay = document.getElementById('score');
    const colors = ['red', 'yellow', 'blue', 'green', 'purple', 'orange'];
    const width = 8;
    let squares = [];
    let score = 0;

    // Create board
    function createBoard() {
      for (let i = 0; i < width * width; i++) {
        const square = document.createElement('div');
        square.setAttribute('draggable', true);
        square.setAttribute('id', i);
        square.classList.add('tile');
        let randomColor = colors[Math.floor(Math.random() * colors.length)];
        square.style.backgroundColor = randomColor;
        grid.appendChild(square);
        squares.push(square);
      }
    }

    createBoard();

    let colorBeingDragged, colorBeingReplaced, squareIdBeingDragged, squareIdBeingReplaced;

    squares.forEach(square => square.addEventListener('dragstart', dragStart));
    squares.forEach(square => square.addEventListener('dragend', dragEnd));
    squares.forEach(square => square.addEventListener('dragover', e => e.preventDefault()));
    squares.forEach(square => square.addEventListener('dragenter', e => e.preventDefault()));
    squares.forEach(square => square.addEventListener('drop', dragDrop));

    function dragStart() {
      colorBeingDragged = this.style.backgroundColor;
      squareIdBeingDragged = parseInt(this.id);
    }

    function dragDrop() {
      colorBeingReplaced = this.style.backgroundColor;
      squareIdBeingReplaced = parseInt(this.id);
      squares[squareIdBeingDragged].style.backgroundColor = colorBeingReplaced;
      squares[squareIdBeingReplaced].style.backgroundColor = colorBeingDragged;
    }

    function dragEnd() {
      let validMoves = [
        squareIdBeingDragged - 1,
        squareIdBeingDragged - width,
        squareIdBeingDragged + 1,
        squareIdBeingDragged + width
      ];
      let validMove = validMoves.includes(squareIdBeingReplaced);

      if (squareIdBeingReplaced && validMove) {
        squareIdBeingReplaced = null;
      } else {
        squares[squareIdBeingDragged].style.backgroundColor = colorBeingDragged;
        squares[squareIdBeingReplaced].style.backgroundColor = colorBeingReplaced;
      }
    }

    function checkRowForThree() {
      for (let i = 0; i < 61; i++) {
        let rowOfThree = [i, i+1, i+2];
        let decidedColor = squares[i].style.backgroundColor;
        const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55];
        if (notValid.includes(i)) continue;
        if (rowOfThree.every(index => squares[index].style.backgroundColor === decidedColor)) {
          rowOfThree.forEach(index => squares[index].style.backgroundColor = '');
          score += 3;
          scoreDisplay.innerHTML = `Score: ${score}`;
          alert(`Dev loves Mac Lenar Bringuela this much: ${score} points! ðŸ’–`);
        }
      }
    }

    function checkColumnForThree() {
      for (let i = 0; i < 47; i++) {
        let columnOfThree = [i, i+width, i+width*2];
        let decidedColor = squares[i].style.backgroundColor;
        if (columnOfThree.every(index => squares[index].style.backgroundColor === decidedColor)) {
          columnOfThree.forEach(index => squares[index].style.backgroundColor = '');
          score += 3;
          scoreDisplay.innerHTML = `Score: ${score}`;
          alert(`Dev loves Mac Lenar Bringuela this much: ${score} points! ðŸ’–`);
        }
      }
    }

    function moveDown() {
      for (let i = 0; i < 56; i++) {
        if (squares[i + width].style.backgroundColor === '') {
          squares[i + width].style.backgroundColor = squares[i].style.backgroundColor;
          squares[i].style.backgroundColor = '';
        }
      }

      for (let i = 0; i < 8; i++) {
        if (squares[i].style.backgroundColor === '') {
          squares[i].style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
        }
      }
    }

    window.setInterval(function() {
      moveDown();
      checkRowForThree();
      checkColumnForThree();
    }, 100);
  </script>
</body>
</html>
